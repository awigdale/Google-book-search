// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Book has state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Books />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <form>
          <input
            onChange={[Function]}
            placeholder="Search by author, title, keywords"
            type="text"
            value=""
          />
          <button
            id="submit"
            onClick={[Function]}
          >
            search
          </button>
        </form>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              onChange={[Function]}
              placeholder="Search by author, title, keywords"
              type="text"
              value=""
            />,
            <button
              id="submit"
              onClick={[Function]}
            >
              search
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Search by author, title, keywords",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "search",
              "id": "submit",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "search",
            "type": "button",
          },
        ],
        "type": "form",
      },
      null,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <form>
            <input
              onChange={[Function]}
              placeholder="Search by author, title, keywords"
              type="text"
              value=""
            />
            <button
              id="submit"
              onClick={[Function]}
            >
              search
            </button>
          </form>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                onChange={[Function]}
                placeholder="Search by author, title, keywords"
                type="text"
                value=""
              />,
              <button
                id="submit"
                onClick={[Function]}
              >
                search
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Search by author, title, keywords",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "search",
                "id": "submit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "search",
              "type": "button",
            },
          ],
          "type": "form",
        },
        null,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Books component renders without state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Books />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <form>
          <input
            onChange={[Function]}
            placeholder="Search by author, title, keywords"
            type="text"
            value=""
          />
          <button
            id="submit"
            onClick={[Function]}
          >
            search
          </button>
        </form>,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              onChange={[Function]}
              placeholder="Search by author, title, keywords"
              type="text"
              value=""
            />,
            <button
              id="submit"
              onClick={[Function]}
            >
              search
            </button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Search by author, title, keywords",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "search",
              "id": "submit",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "search",
            "type": "button",
          },
        ],
        "type": "form",
      },
      null,
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <form>
            <input
              onChange={[Function]}
              placeholder="Search by author, title, keywords"
              type="text"
              value=""
            />
            <button
              id="submit"
              onClick={[Function]}
            >
              search
            </button>
          </form>,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                onChange={[Function]}
                placeholder="Search by author, title, keywords"
                type="text"
                value=""
              />,
              <button
                id="submit"
                onClick={[Function]}
              >
                search
              </button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Search by author, title, keywords",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "search",
                "id": "submit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "search",
              "type": "button",
            },
          ],
          "type": "form",
        },
        null,
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
